name: CI

on:
  pull_request:
    branches:
      - '**'
  # it's annoying to have CI double run on PR/push
  # limit push to only final integration branches like develop
  push:
    branches:
      - 'develop'

jobs:
  run-base-tests:
    runs-on: ubuntu-latest
    strategy:
      # it's helpful to see exactly which test modules passed/failed
      # this finishes all matrix nodes even if one fails along the way
      fail-fast: false

      # all combinations that we will run in parallel to increase throughput
      matrix:
        include:

          - scala-version: "2.11.12"
            BUILD: "enforce code format"
            script: './sbt ++$TRAVIS_SCALA_VERSION clean scalafmtSbtCheck scalafmtCheckAll'

          - scala-version: "2.11.12"
            BUILD: "base"
            TEST_TARGET: "scalding-args scalding-base scalding-date maple scalding-quotation scalding-dagon"
            script: './scripts/run_test.sh'
          - scala-version: "2.12.14"
            BUILD: "base"
            TEST_TARGET: "scalding-args scalding-base scalding-date maple scalding-quotation scalding-dagon"
            script: './scripts/run_test.sh'

          - scala-version: "2.11.12"
            BUILD: "base"
            TEST_TARGET: "scalding-avro scalding-hraven scalding-commons scalding-parquet scalding-parquet-scrooge"
            script: './scripts/run_test.sh'
          - scala-version: "2.12.14"
            BUILD: "base"
            TEST_TARGET: "scalding-avro scalding-hraven scalding-commons scalding-parquet scalding-parquet-scrooge"
            script: './scripts/run_test.sh'

          - scala-version: "2.11.12"
            BUILD: "base"
            TEST_TARGET: "scalding-core scalding-json scalding-db scalding-cats"
            script: './scripts/run_test.sh'
          - scala-version: "2.12.14"
            BUILD: "base"
            TEST_TARGET: "scalding-core scalding-json scalding-db scalding-cats"
            script: './scripts/run_test.sh'

          - scala-version: "2.11.12"
            BUILD: "base"
            TEST_TARGET: "scalding-hadoop-test"
            script: './scripts/run_test.sh'
          - scala-version: "2.12.14"
            BUILD: "base"
            TEST_TARGET: "scalding-hadoop-test"
            script: './scripts/run_test.sh'

          - scala-version: "2.11.12"
            BUILD: "base"
            TEST_TARGET: "scalding-estimators-test"
            script: './scripts/run_test.sh'
          - scala-version: "2.12.14"
            BUILD: "base"
            TEST_TARGET: "scalding-estimators-test"
            script: './scripts/run_test.sh'

          - scala-version: "2.11.12"
            BUILD: "base"
            TEST_TARGET: "scalding-serialization scalding-spark scalding-beam"
            script: './scripts/run_test.sh'
          - scala-version: "2.12.14"
            BUILD: "base"
            TEST_TARGET: "scalding-serialization scalding-spark scalding-beam"
            script: './scripts/run_test.sh'

          - scala-version: "2.11.12"
            BUILD: "base"
            TEST_TARGET: "scalding-thrift-macros"
            script: './scripts/run_test.sh'
          - scala-version: "2.12.14"
            BUILD: "base"
            TEST_TARGET: "scalding-thrift-macros"
            script: './scripts/run_test.sh'

          - scala-version: "2.11.12"
            BUILD: "test tutorials and matrix tutorials and repl"
            TEST_TARGET: "scalding-repl"
            script: "./scripts/run_test.sh && ./scripts/build_assembly_no_test.sh scalding-assembly && ./scripts/test_tutorials.sh && ./scripts/build_assembly_no_test.sh scalding-assembly && ./scripts/test_matrix_tutorials.sh"
          - scala-version: "2.12.14"
            BUILD: "test tutorials and matrix tutorials and repl"
            TEST_TARGET: "scalding-repl"
            script: "./scripts/run_test.sh && ./scripts/build_assembly_no_test.sh scalding-assembly && ./scripts/test_tutorials.sh && ./scripts/build_assembly_no_test.sh scalding-assembly && ./scripts/test_matrix_tutorials.sh"

          - scala-version: "2.11.12"
            BUILD: "test repl and typed tutorials and microsite"
            script: "./sbt ++$TRAVIS_SCALA_VERSION clean docs/makeMicrosite && ./scripts/build_assembly_no_test.sh scalding-repl && ./scripts/test_repl_tutorial.sh && ./scripts/build_assembly_no_test.sh scalding-core && ./scripts/test_typed_tutorials.sh && ./scripts/build_assembly_no_test.sh execution-tutorial && ./scripts/test_execution_tutorial.sh"
          - scala-version: "2.12.14"
            BUILD: "test repl and typed tutorials and microsite"
            script: "./sbt ++$TRAVIS_SCALA_VERSION clean docs/makeMicrosite && ./scripts/build_assembly_no_test.sh scalding-repl && ./scripts/test_repl_tutorial.sh && ./scripts/build_assembly_no_test.sh scalding-core && ./scripts/test_typed_tutorials.sh && ./scripts/build_assembly_no_test.sh execution-tutorial && ./scripts/test_execution_tutorial.sh"


    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all tags for sbt-dynver to properly resolve scalding version

      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt-openj9'
          java-version: 8

      - uses: coursier/cache-action@v6
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.4

      - name: Install Ruby Gems
        run: |
          gem install sass -v 3.7.4
          gem install jekyll -v 3.2.1

      - name: "Run Test Variant"
        env:
          TRAVIS_SCALA_VERSION: ${{ matrix.scala-version }}
          BUILD: ${{ matrix.BUILD }}
          TEST_TARGET: ${{ matrix.TEST_TARGET }}

        run: |
          mkdir -p /home/runner/.ivy2/cache/ # some scripts assume that this folder exists
          ${{ matrix.script }}

      # this is a poor man's retry since apparently github actions does not support this in 2022
      # https://github.community/t/how-to-retry-a-failed-step-in-github-actions-workflow/125880
      # we give the codecov uploader 3 attempts before aborting since it's sometimes flaky
      # https://github.com/codecov/codecov-action/issues/598 maybe this will be fixed in the action itself sometime
      - uses: codecov/codecov-action@v2.1.0
        if: ${{ matrix.TEST_TARGET != null && matrix.TEST_TARGET != '' }} # for some external tests like scald.rb repl we are not able to easily collect coverage info
        continue-on-error: true
        id: code-cov-attempt-1
        with:
          name: codecov
          verbose: true
          version: "v0.1.15"  # some people claim 0.1.15 is more stable (https://github.com/codecov/codecov-action/issues/598#issuecomment-1030074427)
          fail_ci_if_error: true
      - uses: codecov/codecov-action@v2.1.0
        id: code-cov-attempt-2
        continue-on-error: true
        if: ${{ matrix.TEST_TARGET != null && matrix.TEST_TARGET != '' && steps.code-cov-attempt-1.outcome=='failure' }}
        with:
          name: codecov
          verbose: true
          version: "v0.1.15"
          fail_ci_if_error: true
      - uses: codecov/codecov-action@v2.1.0
        id: code-cov-attempt-3
        if: ${{ matrix.TEST_TARGET != null && matrix.TEST_TARGET != '' && steps.code-cov-attempt-2.outcome=='failure' }}
        with:
          name: codecov
          verbose: true
          version: "v0.1.15"
          fail_ci_if_error: true
